****************************************************************
** Gustavo Assuncao
** KUID 2895135
** EECS 448
** 2018
****************************************************************

---- BUG LIST -- LinkedListOfInts TESTING ----

1)

addBack() -> Fails when adding more than 1 element to the list. Elements are all there but in wrong order. In actuality, the function is adding to the front of the list.
	EXPLANATION: The function is probably using the same algorithm as addFront(), adding the elements to the front of the list instead of at the back of the list each time addBack() is called, or maybe this is also linked with the isEmpty() being always true bug.



2)

removeBack() -> Fails whenever called on a populated list. The list seems unharmed. However, false is successfully returned on an empty list.
	EXPLANATION: The function does not decrement size or remove a node. I would say the removing functionality has not been implemented yet, or it is linked with the isEmpty() being always true bug.



3)

removeFront() -> Fails whenever called on a populated list. The list seems unharmed. However, false is successfully returned on an empty list.
	EXPLANATION: The function does not decrement size or remove a node. I would say the removing functionality has not been implemented yet, or it is linked with the isEmpty() being always true bug.



4)

isEmpty() -> Fails whenever called on a populated list. It says the list is empty when it is actually not. Therefore, it is always returning true.
	EXPLANATION: The function is not properly checking if the list is empty. It may be checking if there is no next element after the last element, but not checking if there are no actual elements in the list.











